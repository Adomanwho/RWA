@model WebApp.ViewModels.VMBookList

@{
    ViewData["Title"] = "Books";
}

<h1>Books</h1>

@using (Html.BeginForm("List", "Book", FormMethod.Get))
{
    <div class="row mb-3">
        <div class="col-md-4">
            @Html.Label("Search")
            @Html.TextBox("search", Model.Search, new { @class = "form-control" })
        </div>
        <div class="col-md-3">
            @Html.Label("Genre")
            @Html.DropDownList("genreId", Model.Genres, "All genres", new { @class = "form-control" })
        </div>
        <div class="col-md-5 d-flex align-items-end">
            <button type="submit" class="btn btn-primary me-2">Search</button>
            <a class="btn btn-success" asp-controller="Book" asp-action="Create">Add</a>
        </div>
    </div>
}

<table class="table table-striped">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(m => m.Books.First().Name)</th>
            <th>@Html.DisplayNameFor(m => m.Books.First().AuthorFirstName)</th>
            <th>@Html.DisplayNameFor(m => m.Books.First().AuthorLastName)</th>
            <th>@Html.DisplayNameFor(m => m.Books.First().NumberOfPages)</th>
            <th>@Html.DisplayNameFor(m => m.Books.First().GenreName)</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var book in Model.Books)
        {
            <tr>
                <td>@Html.DisplayFor(_ => book.Name)</td>
                <td>@Html.DisplayFor(_ => book.AuthorFirstName)</td>
                <td>@Html.DisplayFor(_ => book.AuthorLastName)</td>
                <td>@Html.DisplayFor(_ => book.NumberOfPages)</td>
                <td>@Html.DisplayFor(_ => book.GenreName)</td>
                <td>
                    <a class="text-danger" asp-controller="Book" asp-action="Delete" asp-route-name="@book.Name">Delete</a>
                    <span> | </span>
                    <a class="text-primary" asp-controller="Book" asp-action="Update" asp-route-name="@book.Name">Update</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="mt-3">
    @if (Model.HasPreviousPage)
    {
        @Html.ActionLink("Previous", "List", new { search = Model.Search, genreId = Model.SelectedGenreId, page = Model.Page - 1, pageSize = Model.PageSize }, new { @class = "btn btn-secondary" })
    }

    @if (Model.HasNextPage)
    {
        @Html.ActionLink("Next", "List", new { search = Model.Search, genreId = Model.SelectedGenreId, page = Model.Page + 1, pageSize = Model.PageSize }, new { @class = "btn btn-secondary ms-2" })
    }
</div>
